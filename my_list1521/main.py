"""
Задача 1. Логгер магических методов. Функция super()

Создайте класс
MyList, который наследуется от встроенного класс listи полностью ведет себя как list.

class MyList(list):
    pass

Однако работа некоторых его магических методов логируется выводом в консоль сообщения
Работает магический метод.
Подумайте, какие магические методы надо расширить, чтобы в результате работы следующего кода в
консоль вывелось не менее 5 сообщений о работе магических методов.
"""

class MyList(list):

    """ Класс MyList, который наследуется от всроенного класса
    list и полностью ведет себя как list """

    def __new__(cls, *args, **kwargs):
        print("Работает магический метод")
        return super().__new__(cls, *args, **kwargs)
    
    def __init__(self, value):
        print("Работает магический метод")
        super().__init__(value)
    
    def __getitem__(self, item):
        print("Работает магический метод")
        return super().__getitem__(item)
    
    def __str__(self):
        print("Работает магический метод")
        return super().__str__()
    
    def __len__(self):
        print("Работает магический метод")
        return super().__len__()


if __name__ == '__main__':
    lst = MyList(['Jone', 'Snow', 'Java'])

    if not lst[2] == 'Python':
        lst[2] = 'Python'

    print(lst)
    print(len(lst))

""" Работает магический метод __new__
Работает магический метод  __init__
Работает магический метод __getitem__
Работает магический метод __str__
['Jone', 'Snow', 'Python']
Работает магический метод
3                  __len__"""